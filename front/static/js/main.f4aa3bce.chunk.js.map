{"version":3,"sources":["profile_img.jpg","models/strava/strava-activity-type.tsx","components/profile/index.tsx","util/compare-dates.tsx","components/activitiesSummary/activitiesWeekSummary/index.tsx","services/strava-auth/tokenInterceptor.tsx","services/activities/index.tsx","store/activities-summary/activitiesSummaryReducer.tsx","components/activitiesSummary/activityButtons/index.tsx","store/activities-summary/types.tsx","components/activitiesSummary/index.tsx","components/home/index.tsx","models/strava/strava-detailed-activity-iots.tsx","services/strava-auth/index.tsx","store/activities/activities-reducer.tsx","services/user/index.tsx","services/login/index.tsx","components/navigation/index.tsx","store/user/user-reducer.tsx","store/user/types.tsx","components/login/index.tsx","components/sign-up/index.tsx","components/request-authorization/index.tsx","components/welcome/index.tsx","App.tsx","store/activities/types.tsx","store/store.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","StravaActivityType","connect","state","user","activitiesCount","activities","activityList","length","latestActivity","sort","a","b","Date","start_date_local","getTime","props","react_default","createElement","className","style","display","justifyContent","alignItems","Image","src","testImg","marginBottom","zIndex","position","maxWidth","maxHeight","roundedCircle","Card","Header","username","ListGroup","variant","Item","type","dist_default","format","compareDates","date1","date2","d1","setHours","d2","days","startDate","now","getChartData","weekActivityData","chartDate","chartData","i","dist","filter","activity","map","distance","reduce","sum","day","getDay","Math","round","setDate","getDate","activityType","activitiesSummary","selectedActivity","es6","width","height","data","margin","top","right","left","bottom","dataKey","fill","tokenInterceptorRef","TStravaActivityType","t","getTypeObject","initialState","Ride","mapDispatchersToProps","setActivity","dispatch","activityButtonStyle","color","textShadow","handleSetActivityClick","ButtonGroup","Button","onClick","active","lib_default","name","size","Run","Swim","activitiesSummary_activityButtons","activitiesWeekSummary","Home","components_profile","components_activitiesSummary","TStravaDetailedActivity","id","moving_time","elapsed_time","workout_type","average_speed","max_speed","kilojoules","description","calories","strava_auth","getRedirectUrl","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","response","url","wrap","_context","prev","next","axios","get","concat","sent","abrupt","stop","apply","this","arguments","refreshToken","_ref2","_callee2","userId","token","_context2","post","_x","baseAxios","create","getAll","decodeActivities","forEach","decode","services_activities","setInterceptor","newUser","interceptors","request","eject","stravaToken","use","config","expiresAt","stravaAuthService","headers","objectSpread","Authorization","accessToken","ejectInterceptor","console","log","initialized","services_user","login","creds","t0","Error","logout","services_login","currentUser","_ref3","_callee3","_context3","loginService","activityService","_x2","loggedIn","homeLinkPath","loginStatus","Navbar","bg","expand","react_router_bootstrap_lib","exact","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","eventKey","NavDropdown","title","href","Divider","code","message","withRouter","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","password","setPassword","handleSubmit","document","getElementById","reset","history","push","FormGroup","FormLabel","FormControl","onChange","event","target","value","placeholder","addUser","addedUser","userService","_x3","firstName","setFirstName","lastName","setLastName","_useState5","_useState6","_useState7","_useState8","redirectUrl","stravaAuthUrl","preventDefault","window","location","Welcome","initialize","setUser","status","loginFailed","activitiesService","initializeActivities","useEffect","userLoginStatus","isLoggedIn","isNotAuthorizedToStrava","path","pathname","notLoggedInPaths","includes","enforceRoutes","navigation","react_router","component","Login","Signup","RequestAuthorization","reducer","combineReducers","undefined","action","configureStore","createStore","applyMiddleware","thunk","ReactDOM","render","es","store","react_router_dom","src_App_0"],"mappings":"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","file":"static/js/main.f4aa3bce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile_img.0cc8b8fb.jpg\";","import * as t from 'io-ts'\n\nexport enum StravaActivityType {\n  AlpineSki = \"AlpineSki\", BackcountrySki = \"BackcountrySki\",\n  Canoeing = \"Canoeing\", Crossfit = \"Crossfit\",\n  EBikeRide = \"EBikeRide\", Elliptical = \"Elliptical\",\n  Golf = \"Golf\", Handcycle = \"Handcycle\", Hike = \"Hike\",\n  IceSkate = \"IceSkate\", InlineSkate = \"InlineSkate\",\n  Kayaking = \"Kayaking\", Kitesurf = \"Kitesurf\",\n  NordicSki = \"NordicSki\", Ride = \"Ride\",\n  RockClimbing = \"RockClimbing\", RollerSki = \"RollerSki\",\n  Rowing = \"Rowing\", Run = \"Run\", Sail = \"Sail\",\n  Skateboard = \"Skateboard\", Snowboard = \"Snowboard\", Snowshoe = \"Snowshoe\",\n  Soccer = \"Soccer\", StairStepper = \"StairStepper\",\n  StandUpPaddling = \"StandUpPaddling\", Surfing = \"Surfing\",\n  Swim = \"Swim\", Velomobile = \"Velomobile\", VirtualRide = \"VirtualRide\",\n  VirtualRun = \"VirtualRun\", Walk = \"Walk\", WeightTraining = \"WeightTraining\",\n  Wheelchair = \"Wheelchair\", Windsurf = \"Windsurf\", Workout = \"Workout\",\n  Yoga = \"Yoga\"\n}\n\n\nconst getTypeObject = () => {\n  const type: any = {}\n  for (let i = 0; i < 37; i++) {\n    type[\"Ride\"] = 14\n  }\n  return type\n}\n// Validator\nconst TStravaActivityType =  t.keyof(getTypeObject())\n\nexport default TStravaActivityType","import './index.css'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Card, ListGroup, Image } from 'react-bootstrap'\nimport Moment from 'react-moment'\nimport { IProps } from './types'\nimport testImg from './../../profile_img.jpg'\nimport { StravaDetailedActivity } from '../../models/strava/strava-detailed-activity-iots'\n\nconst filterLatestActivity = (activities:Array<StravaDetailedActivity>) => {\n  return activities\n    .sort((a, b) => new Date(b.start_date_local).getTime()\n      - new Date(a.start_date_local).getTime())\n    [0]\n}\n\nconst Profile: React.FunctionComponent<IProps> = (props: IProps) => {\n  const LatestActivity = () => {\n    if (!props.latestActivity) return (<div></div>)\n    return (\n      <div>\n        Latest activity:<br />\n        <b>{ props.latestActivity.type }</b>\n        &nbsp;- <Moment format=\"MMM DD, YYYY\">{props.latestActivity.start_date_local}</Moment>\n      </div>\n    )\n  }\n  return (\n    <div className=\"profile\">\n    <div style={{ display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'}}>\n    <Image src={testImg }\n            style={{marginBottom: '-2.5rem', zIndex: 100000, position:'relative', maxWidth:'80px', maxHeight:'80px'}}\n            roundedCircle />\n    </div>\n      <Card>\n        <Card.Header>\n          <div className=\"profileBody text-center\">\n            <h3>{ props.user.username }</h3>\n            <p>Activities - { props.activitiesCount }</p>\n          </div>\n        </Card.Header>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>\n            <LatestActivity />\n          </ListGroup.Item>\n          <ListGroup.Item>\n            Your Training Log\n          </ListGroup.Item>\n        </ListGroup>\n      </Card>\n    </div>\n  )\n}\nconst mapStateToProps = (state: any) => {\n  return {\n    user: state.user,\n    activitiesCount: state.activities.activityList.length,\n    latestActivity: filterLatestActivity(state.activities.activityList)\n  }\n}\nexport default connect(mapStateToProps)(Profile)","const compareDates = (date1:Date, date2:Date):number => {\n  let d1 = new Date(date1)\n  d1.setHours(0, 0, 0, 0)\n  let d2 = new Date(date2)\n  d2.setHours(0, 0, 0, 0)\n  return d1.getTime() - d2.getTime()\n}\nexport default compareDates","import React from 'react'\nimport { connect } from 'react-redux'\nimport { StravaDetailedActivity } from '../../../models/strava/strava-detailed-activity-iots'\nimport {\n  BarChart, Bar, XAxis, YAxis, Tooltip,\n} from 'recharts'\nimport { StravaActivityType }  from '../../../models/strava/strava-activity-type'\nimport compareDates from '../../../util/compare-dates'\nimport { IChartData, IProps } from './types'\n\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\nconst startDate = new Date(Date.now() - 6 * 24 * 60 * 60 * 1000)\n\nconst getChartData = (weekActivityData:Array<StravaDetailedActivity>):Array<IChartData> => {\n    const chartDate:Date = new Date(startDate)\n    let chartData:Array<IChartData> = []\n    for (let i = 0; i < 7; i++) {\n      let dist = weekActivityData\n        .filter(activity => {\n          return compareDates(new Date(activity.start_date_local), chartDate) === 0\n        })\n        .map(activity => activity.distance)\n        .reduce((sum, distance) => sum + distance, 0)\n      chartData[i] = {\n        day: days[chartDate.getDay()],\n        distance: dist = Math.round(10 * dist / 1000) / 10\n      }\n      chartDate.setDate(chartDate.getDate() + 1)\n    }\n    return chartData\n  }\n\nconst filterActivities = (\n  activities:Array<StravaDetailedActivity>,\n  activityType: StravaActivityType): Array<StravaDetailedActivity> => {\n    return activities\n      .filter(activity => {\n        return activity.type === activityType &&\n          compareDates(new Date(activity.start_date_local), startDate) >= 0\n      })\n}\n\nconst ActivitiesWeekSummary: React.FunctionComponent<IProps> = (props: IProps) => {\n  return (\n    <div>\n      <BarChart\n        width={500}\n        height={150}\n        data={ getChartData(props.activities) }\n        margin={{\n          top: 5, right: 30, left: 0, bottom: 5,\n        }}>\n        <XAxis dataKey=\"day\" />\n        <YAxis />\n        <Tooltip />\n        <Bar dataKey=\"distance\" fill=\"#8884d8\" />\n      </BarChart>\n      <p className=\"text-muted\">Strava</p>\n    </div>\n  )\n}\nconst mapStateToProps = (state: any) => {\n  return {\n    activities: filterActivities(\n      state.activities.activityList,\n      state.activitiesSummary.selectedActivity)\n  }\n}\nexport default connect(mapStateToProps)(ActivitiesWeekSummary)","import { AxiosRequestConfig } from 'axios'\nimport IUser from '../../models/User'\nimport stravaAuthService from './../strava-auth'\n\nlet user:IUser\n\nexport const tokenInterceptor = (newUser: IUser) => async (config: AxiosRequestConfig): \n    Promise<AxiosRequestConfig> => {  \n  user = newUser\n  const timeToTokenExpiration = user.stravaToken!.expiresAt - (new Date().getTime() / 1000)\n  if (timeToTokenExpiration < 0) {\n    user.stravaToken = await stravaAuthService.refreshToken(user.id!)    \n  }\n  config.headers = {\n    ...config.headers,\n    Authorization: `Bearer ${user.stravaToken!.accessToken}`\n  }\n  return config\n}","import baseAxios from 'axios'\nconst axios = baseAxios.create()\nimport { StravaDetailedActivity } from \"../../models/strava/strava-detailed-activity-iots\"\nimport TStravaDetailedActivity from \"../../models/strava/strava-detailed-activity-iots\"\nimport { tokenInterceptor } from '../strava-auth/tokenInterceptor'\nimport IStravaToken from '../../models/IStravaToken';\nimport IUser from '../../models/User';\n\nconst baseUrl = 'https://www.strava.com/api/v3/athlete/activities'\n\nlet token: IStravaToken\nlet tokenInterceptorRef: number\n\n\nconst setInterceptor = (user: IUser) => {\n  if (tokenInterceptorRef)\n  axios.interceptors.request.eject(tokenInterceptorRef)\n  token = user.stravaToken!\n  tokenInterceptorRef = axios.interceptors.request.use(tokenInterceptor(user))\n}\n\nconst getAll = async ():Promise<Array<StravaDetailedActivity>> => {\n  const response = await axios.get(baseUrl)\n  const activities: Array<any> = response.data\n  decodeActivities(activities)\n  return activities\n}\nconst ejectInterceptor = () => {\n  console.log(\"Ejecting interceptor\")\n  axios.interceptors.request.eject(tokenInterceptorRef)\n}\nconst decodeActivities = (activities:Array<any>) => {\n  activities\n    .forEach(activity => TStravaDetailedActivity.decode(activity))\n}\nexport default { getAll, setInterceptor, ejectInterceptor }\n","import { Dispatch } from 'redux'\nimport { StravaActivityType } from '../../models/strava/strava-activity-type';\nimport { SET_ACTIVITY, ActivitiesActionTypes, ActivitiesSummaryState } from './types'\n\n\nconst initialState:ActivitiesSummaryState = {\n  selectedActivity: StravaActivityType.Ride\n}\nexport const reducer = (state = initialState, action: ActivitiesActionTypes):ActivitiesSummaryState => {\n  if (action.type === SET_ACTIVITY) {\n    return { ...state, selectedActivity: action.data }\n  }\n  return state\n}\nexport const setActivity = (activity:StravaActivityType) => {\n  return (dispatch: Dispatch) => {\n    dispatch({\n      type: SET_ACTIVITY,\n      data: activity\n    })\n  }\n}","import './index.css'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { ButtonGroup, Button } from 'react-bootstrap'\nimport FontAwesome from 'react-fontawesome'\nimport { StravaActivityType } from '../../../models/strava/strava-activity-type'\nimport { setActivity } from '../../../store/activities-summary/activitiesSummaryReducer'\n\ninterface IProps {\n  setActivity: Function,\n  selectedActivity: StravaActivityType\n}\nconst ActivityButtons: React.FunctionComponent<IProps> = (props: IProps) => {\n  const activityButtonStyle = { color: 'white', textShadow: '0 1px 0 rgba(0, 0, 0, 0.1)' }\n  const handleSetActivityClick = (activity:StravaActivityType) => () => {\n    props.setActivity(activity)\n  }\n  return (\n    <div>\n      <ButtonGroup>\n        <Button\n          variant=\"secondary\"\n          onClick={handleSetActivityClick(StravaActivityType.Ride)}\n          active={props.selectedActivity === StravaActivityType.Ride}>\n          <FontAwesome className=\"activityIcon\"\n            name='bicycle'\n            size='2x'\n            style={activityButtonStyle}\n          />\n        </Button>\n        <Button\n          variant=\"secondary\"\n          onClick={handleSetActivityClick(StravaActivityType.Run)}\n          active={props.selectedActivity === StravaActivityType.Run}>\n          <FontAwesome\n            name='running'\n            size='2x'\n            style={activityButtonStyle}\n          />\n        </Button>\n        <Button variant=\"secondary\"\n          onClick={handleSetActivityClick(StravaActivityType.Swim)}\n          active={props.selectedActivity === StravaActivityType.Swim}>\n          <FontAwesome\n            name='swimmer'\n            size='2x'\n            style={activityButtonStyle}\n          />\n        </Button>\n      </ButtonGroup>\n    </div>\n  )\n}\nconst mapStateToProps = (state: any) => {\n  return {\n    selectedActivity: state.activitiesSummary.selectedActivity\n  }\n}\nconst mapDispatchersToProps = {\n  setActivity\n}\nexport default connect(mapStateToProps, mapDispatchersToProps)(ActivityButtons)","import { StravaActivityType } from \"../../models/strava/strava-activity-type\";\n\nexport const SET_ACTIVITY = 'SET_ACTIVITY'\n\nexport interface ActivitiesSummaryState {\n  selectedActivity: StravaActivityType\n}\ninterface SetActivityAction {\n  type: typeof SET_ACTIVITY,\n  data: StravaActivityType\n}\n\nexport type ActivitiesActionTypes = SetActivityAction","import './index.css'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Card, ListGroup } from 'react-bootstrap'\nimport { StravaDetailedActivity } from '../../models/strava/strava-detailed-activity-iots'\nimport ActivitiesWeekSummary from './activitiesWeekSummary'\nimport ActivityButtons from './activityButtons'\n\ninterface IProps {\n  activities: Array<StravaDetailedActivity>\n}\n\nconst ActivitiesSummary: React.FunctionComponent<IProps> = (props: IProps) => {\n  return (\n    <div>\n      <Card>\n        <Card.Header>\n          Activities Summary\n        </Card.Header>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>\n            <ActivityButtons />\n          </ListGroup.Item>\n          <ListGroup.Item><ActivitiesWeekSummary /></ListGroup.Item>\n          <ListGroup.Item>Month summary</ListGroup.Item>\n        </ListGroup>\n      </Card>\n    </div>\n  )\n}\nconst mapStateToProps = (state: any) => {\n  return {\n    activities: state.activities\n  }\n}\n\nexport default connect(mapStateToProps)(ActivitiesSummary)","import './index.css'\nimport React from 'react'\nimport Profile from './../profile'\nimport ActivitiesSummary from '../activitiesSummary'\n\nconst Home = () => {\n  return (\n    <div>\n      <Profile />\n      <ActivitiesSummary />\n    </div>\n  )\n}\n\nexport default Home","import * as t from 'io-ts';\nimport TStravaActivityType from './strava-activity-type'\n\n// Type of StravaDetailedActivity\nexport type StravaDetailedActivity = t.TypeOf<typeof TStravaDetailedActivity>;\n\n// Validator\nconst TStravaDetailedActivity = t.type({\n  id: t.number,             // activitys Strava-id\n  name: t.string,           // activity's name\n  distance: t.number,       // meters\n  moving_time: t.number,    // seconds\n  elapsed_time: t.number,   // seconds\n  type: TStravaActivityType,\n  start_date_local: t.string,  // activity's local start time\n  workout_type: t.number,\n  average_speed: t.number,  // meters per second\n  max_speed: t.number,      // meters per second\n  kilojoules: t.number,      // total work in kJ, only bike rides\n  description: t.string,     // description of the activity\n  calories: t.number        // kilocalories consumed during activity\n\n})\n\nexport default TStravaDetailedActivity","import axios from 'axios'\nimport IStravaToken from '../../models/IStravaToken';\n\nconst baseUrl = '/api/stravaauth'\n\nconst getRedirectUrl = async ():Promise<String> => {\n    const response = await axios.get(`${baseUrl}/redirectUrl`)\n    const url: String = response.data\n    return url\n}\n\nconst refreshToken = async (userId: string):Promise<IStravaToken> => {\n    const response = await axios.post(`${baseUrl}/refreshToken`, {\n        userId\n    })\n    const token: IStravaToken = response.data\n    return token\n}\n\nexport default { getRedirectUrl, refreshToken }","import activityService from '../../services/activities'\nimport { Dispatch } from 'redux'\nimport { IActivitiesState, ActivitiesActionTypes, INITIALIZE_ACTIVITIES } from './types'\nimport { StravaDetailedActivity } from '../../models/strava/strava-detailed-activity-iots'\nimport { LOGOUT_USER } from '../user/types'\n\nconst initialState: IActivitiesState = { \n  initialized: false,\n  activityList: []\n}\n\nexport const reducer = (\n  state = initialState,\n  action: ActivitiesActionTypes): IActivitiesState =>\n  {\n    if (action.type === INITIALIZE_ACTIVITIES) {\n      return { initialized: true, activityList: action.data }\n    }\n    if (action.type === LOGOUT_USER) {\n      return initialState      \n    }\n    return state\n  }\n\nexport const initializeActivities = () => {\n  return async (dispatch: Dispatch) => {\n    const activities: Array<StravaDetailedActivity> = await activityService.getAll()\n    dispatch({\n      type: INITIALIZE_ACTIVITIES,\n      data: activities\n    })\n  }\n}","import IUser from \"../../models/User\"\nimport axios from \"axios\"\nconst baseUrl = \"/api/users\"\n\nconst post = async (user:IUser):Promise<IUser> => {\n  const response = await axios.post<IUser>(baseUrl, user)\n  return response.data\n}\n\nexport default { post }","import IUser from \"../../models/User\"\nimport axios, { AxiosResponse, AxiosError } from \"axios\"\nimport { ICredentials } from \"../../models/Credentials\"\n\nconst baseUrl = \"/api/login\"\n\nconst login = async (creds: ICredentials): Promise<AxiosResponse<IUser>> => {\n  try {\n    const response = await axios.post<IUser>(`${baseUrl}`, creds)\n    console.log(\"Service logged in user\",)\n    return response\n  }\n  catch (e) {    \n    throw Error(e)\n  }  \n}\nconst logout = async (): Promise<any> => {\n  await axios.post(`${baseUrl}/logout`)  \n}\nconst currentUser = async (): Promise<AxiosResponse<IUser>> => { \n  return await axios.get<IUser>(`${baseUrl}/currentUser`)\n}\n\nexport default { login, currentUser, logout }","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from './../../store/user/user-reducer'\nimport { AppState } from '../../store/store';\nimport IUser from '../../models/User';\n\ninterface IProps {\n  logout: Function,\n  user: IUser\n}\n\nconst Navigation = (props: IProps) => {\n  const loggedIn = !props.user ? false : props.user.username ? true : false\n  const notLoggedInNavItems = () => {\n    return (\n      <Nav className=\"mr-auto\">\n        <LinkContainer exact to=\"/login\">\n          <Nav.Link eventKey=\"/login\">Login</Nav.Link>\n        </LinkContainer>\n        <LinkContainer exact to=\"/signup\">\n          <Nav.Link eventKey=\"/signup\">Sign Up</Nav.Link>\n        </LinkContainer>\n      </Nav>\n    )\n  }\n  const loggedInNavItems = () => {\n    return (\n      <Nav className=\"mr-auto\">\n        <LinkContainer exact to=\"/home\">\n          <Nav.Link eventKey=\"/home\">Home</Nav.Link>\n        </LinkContainer>\n        <Nav.Link onClick={() => props.logout()}>Logout</Nav.Link>\n        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n          <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n          <NavDropdown.Divider />\n          <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n        </NavDropdown>\n      </Nav>\n    )\n  }\n  const homeLinkPath = props.user.loginStatus === \"LOGGED_IN\" ? \n    '/home' : '/'\n  return (\n    <div>\n      <Navbar bg=\"light\" expand=\"lg\">\n        \n        <LinkContainer exact to={homeLinkPath}>\n          <Navbar.Brand>Fitness App</Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          {loggedIn ? loggedInNavItems() : notLoggedInNavItems()}\n        </Navbar.Collapse>\n      </Navbar >\n    </div >\n  )\n}\nconst mapDispatchersToProps = {\n  logout\n}\nconst mapStateToProps = (state: AppState) => {\n  return {\n    user: state.user\n  }\n}\nexport default connect(mapStateToProps, mapDispatchersToProps)(Navigation)","import { Dispatch } from 'redux'\nimport { SET_USER, LOGOUT_USER, LOGIN_FAILED, UserActionTypes } from './types'\nimport IUser from '../../models/User'\nimport userService from '../../services/user'\nimport loginService from '../../services/login'\nimport { ICredentials } from '../../models/Credentials';\nimport { AxiosResponse } from 'axios';\nimport activityService from './../../services/activities'\n\nexport const reducer = (state: IUser = { loginStatus: \"NOT_CHECKED\" } as IUser,\n  action: UserActionTypes): IUser => {\n  if (action.type === SET_USER) {\n    return { ...action.data, loginStatus: \"LOGGED_IN\" }\n  }\n  if (action.type === LOGOUT_USER || action.type === LOGIN_FAILED) {\n    return { loginStatus: \"NOT_LOGGED_IN\" } as IUser\n  }\n  \n  return state\n}\nexport const login = (creds: ICredentials) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response: AxiosResponse<IUser> = await loginService.login(creds)\n      console.log(\"dispatcing \", response.data)\n      return dispatch({\n          type: SET_USER,\n          data: response.data  \n      })\n    }\n    catch (e) {\n      console.log(\"Login failed: \", e.code, e.message)      \n    }    \n  }\n}\nexport const loginFailed = () => {\n  return (dispatch: Dispatch) => {\n    dispatch({\n      type: LOGIN_FAILED\n    })\n  }  \n}\nexport const logout = () => {\n  return async (dispatch: Dispatch) => {\n    await loginService.logout()\n    activityService.ejectInterceptor()\n    dispatch({\n      type: LOGOUT_USER\n    })\n  }\n}\nexport const setUser = (user: IUser) => {\n  return (dispatch: Dispatch) => {\n    dispatch({\n      type: SET_USER,\n      data: user\n    })\n  }\n}\n\nexport const addUser = (user: IUser) => {\n  return async (dispatch: Dispatch) => {\n    const addedUser: IUser = await userService.post(user)\n    dispatch({\n      type: SET_USER,\n      data: addedUser\n    })\n  }\n}\n\n","import IUser from \"../../models/User\";\n\nexport const SET_USER = 'SET_USER'\nexport const LOGOUT_USER = 'LOGOUT_USER'\nexport const LOGIN_FAILED = 'LOGIN_FAILED'\n\ninterface SetUserAction {\n  type: typeof SET_USER,\n  data: IUser\n}\ninterface LogoutUserAction {\n  type: typeof LOGOUT_USER  \n}\ninterface LoginFailedAction {\n  type: typeof LOGIN_FAILED\n}\n\nexport type UserActionTypes = SetUserAction | LogoutUserAction | LoginFailedAction","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../../store/user/user-reducer'\nimport { FormGroup, FormControl, FormLabel, Button } from 'react-bootstrap'\nimport { IProps, IInputChangeEvent } from './types'\nimport { ICredentials } from '../../models/Credentials'\nimport { withRouter } from 'react-router'\n\nconst Login: React.SFC<IProps> = (props: IProps) => {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const handleSubmit = async () => {\n    const creds: ICredentials = {\n      username, password\n    };\n    (document.getElementById(\"loginForm\") as HTMLFormElement).reset()\n    await props.login(creds)\n    props.history.push(\"/\")\n  }\n  const handleUsernameChange = (event: IInputChangeEvent) => {\n    setUsername((event.target as HTMLInputElement).value)\n  }\n  const handlePasswordChange = (event: IInputChangeEvent) => {\n    setPassword((event.target as HTMLInputElement).value)\n  }\n  return (\n    <div>\n      <h4>Login</h4>\n      <form id=\"loginForm\">\n        <FormGroup>\n          <FormLabel>Username</FormLabel>\n          <FormControl id=\"username\" onChange={handleUsernameChange} type=\"text\"\n            name=\"username\" placeholder=\"Enter username\" />\n          <FormLabel>Password</FormLabel>\n          <FormControl onChange={handlePasswordChange} type=\"password\"\n            id=\"password\" name=\"password\" placeholder=\"Enter password\" />\n          <Button onClick={handleSubmit}>Login</Button>\n        </FormGroup>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchersToProps = {\n  login\n}\n\nexport default withRouter(connect(null, mapDispatchersToProps)(Login))\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addUser } from '../../store/user/user-reducer'\nimport { FormGroup, FormControl, FormLabel,\n  Button } from 'react-bootstrap'\nimport IUser from '../../models/User'\nimport { IProps, IInputChangeEvent } from './types'\nimport { withRouter } from 'react-router'\n\nconst Signup: React.SFC<IProps> = (props: IProps) => {\n  const [firstName, setFirstName] = useState(\"\")\n  const [lastName, setLastName] = useState(\"\")\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const handleSubmit = async () => {    \n    const user: IUser = {\n      firstName, lastName, username, password\n    };\n    (document.getElementById(\"addUserForm\") as HTMLFormElement).reset()\n    await props.addUser(user)    \n    props.history.push(\"/\")\n  }\n\n  const handleFirstNameChange = (event: IInputChangeEvent) => {\n    setFirstName((event.target as HTMLInputElement).value)\n  }\n  const handleLastNameChange = (event: IInputChangeEvent) => {\n    setLastName((event.target as HTMLInputElement).value)\n  }\n  const handleUsernameChange = (event: IInputChangeEvent) => {\n    setUsername((event.target as HTMLInputElement).value)\n  }\n  const handlePasswordChange = (event: IInputChangeEvent) => {\n    setPassword((event.target as HTMLInputElement).value)\n  }\n  return (\n    <div>\n      <form id=\"addUserForm\">\n      <h4>Sign Up</h4>\n      <FormGroup>\n        <FormLabel>First name</FormLabel>\n        <FormControl onChange={handleFirstNameChange} type=\"text\"\n          name=\"firstName\" placeholder=\"Enter first name\" />\n\n        <FormLabel>Last name</FormLabel>\n        <FormControl onChange={handleLastNameChange} type=\"text\"\n          name=\"lastName\" placeholder=\"Enter last name\" />\n\n        <FormLabel>Username</FormLabel>\n        <FormControl onChange={handleUsernameChange} type=\"text\"\n          name=\"username\" placeholder=\"Enter username\" />\n\n        <FormLabel>Password</FormLabel>\n        <FormControl onChange={handlePasswordChange} type=\"password\"\n          name=\"password\" placeholder=\"Enter password\" />\n        <Button onClick={handleSubmit}>Submit</Button>\n      </FormGroup>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchersToProps = {\n  addUser\n}\nexport default withRouter(connect(null, mapDispatchersToProps)(Signup))\n","import React from 'react'\nimport { AppState } from '../../store/store'\nimport IUser from '../../models/User'\nimport { connect } from 'react-redux'\n\ninterface IProps {\n  user: IUser\n}\nconst RequestAuthorization = (props: IProps) => {\n  const getStravaAuthorization = () => async (event: any) => {\n    event.preventDefault()\n    console.log(\"WTF\")\n    const redirectUrl = `${window.location.href}api/stravaauth/authCode/${props.user.id}`\n    const stravaAuthUrl = \"http://www.strava.com/oauth/authorize?\"\n      + \"client_id=33120&response_type=code&redirect_uri=\"\n      + redirectUrl + \"&\"\n      + \"approval_prompt=force&scope=profile:write,activity:write,activity:read_all\"\n    window.location.href = stravaAuthUrl\n  }\n\n  return (\n    <div>\n      <h4>Please authorize access to your Strava data</h4>\n      <button onClick={getStravaAuthorization}>Authorize</button>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: AppState) => { \n  return {\n    user: state.user\n  }  \n}\nexport default connect(mapStateToProps, null)(RequestAuthorization)","import React from 'react'\n\nconst Welcome = () => {\n  return (\n    <div>\n      <h1>WELCOME PAGE</h1>\n    </div>\n  )\n}\n\nexport default Welcome","import './App.css'\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, withRouter, RouteComponentProps, Redirect } from 'react-router-dom'\nimport Home from './components/home'\nimport { initializeActivities } from './store/activities/activities-reducer'\nimport { setUser, loginFailed } from './store/user/user-reducer'\nimport { AppState } from './store/store'\nimport Navigation from './components/navigation'\nimport Login from './components/login'\nimport Signup from './components/sign-up'\nimport IUser from './models/User'\nimport { IActivitiesState } from './store/activities/types';\nimport RequestAuthorization from './components/request-authorization';\nimport loginService from './services/login'\nimport Welcome from './components/welcome';\nimport activitiesService from './services/activities'\nimport { LoginStatus } from './models/LoginStatus';\n\ninterface IProps extends RouteComponentProps<any> {\n  setUser: Function,\n  loginFailed: Function,\n  activities: IActivitiesState,\n  initializeActivities: Function,\n  user: IUser\n}\n\nconst initialize = async (props: IProps) => {\n  if (props.user.loginStatus === \"NOT_CHECKED\") {\n    try {\n      const response = await loginService.currentUser()\n      const user = response.data\n      props.setUser(user)\n    }\n    catch (e) {\n      if (e.response && e.response.status === 401) {\n        console.log(\"Login failed\")\n        props.loginFailed()\n      }\n      else console.log(e)\n    }    \n  }\n  if (props.user.loginStatus === \"LOGGED_IN\" && !props.activities.initialized) {\n    if (props.user.stravaToken && props.user.stravaToken.accessToken) {        \n      activitiesService.setInterceptor(props.user)\n      props.initializeActivities()\n    }\n  }\n}\nconst enforceRoutes = (props: IProps) => {\n  const userLoginStatus: LoginStatus = props.user.loginStatus as LoginStatus\n  const isLoginPending = userLoginStatus === \"NOT_CHECKED\"\n  const isLoggedIn = isLoginPending || userLoginStatus === \"LOGGED_IN\"\n  const isNotAuthorizedToStrava = isLoggedIn && props.user.stravaToken && !props.user.stravaToken.accessToken\n  const path = props.history.location.pathname\n  const notLoggedInPaths:Array<string> = ['/','/login', '/signup', '/requestAuthorization']\n  \n  if (isLoggedIn && isNotAuthorizedToStrava && path !== '/requestAuthorization') props.history.push('/requestAuthorization')\n  else if (isLoggedIn && notLoggedInPaths.includes(path)) props.history.push('/home')\n  else if (!isLoggedIn && !(notLoggedInPaths.includes(path))) props.history.push('/login')\n  \n}\nconst App: React.SFC<IProps> = (props: IProps) => {\n  useEffect(() => {\n    initialize(props)\n    enforceRoutes(props)\n  }, [props])\n\n  const LoginPendingView = () => {\n    return (\n      <div>\n        <h1>SPINNER...</h1>\n      </div>\n    )\n  }\n\n  const LoginCheckedView = () => {\n    return (\n      <div>\n        {/*USER NOT LOGGED IN */}\n        \n        <Route exact path='/' component={Welcome} />\n        <Route path='/home' component={Home} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/signup' component={Signup} />\n        <Route exact path='/requestAuthorization' component={RequestAuthorization} />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <Navigation />\n      { props.user.loginStatus === \"NOT_CHECKED\" ? LoginPendingView() : LoginCheckedView() }\n    </div>\n  )\n}\nconst mapStateToProps = (state: AppState) => ({\n  user: state.user,\n  activities: state.activities\n})\nconst mapDispatchersToProps = {\n  initializeActivities, setUser, loginFailed\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchersToProps)(App))\n","import { StravaDetailedActivity } from \"../../models/strava/strava-detailed-activity-iots\";\n\n\nexport interface IActivitiesState {\n  initialized: boolean,\n  activityList: Array<StravaDetailedActivity>\n}\n\nexport const INITIALIZE_ACTIVITIES = 'INITIALIZE_ACTIVITIES'\n\ninterface InitializeActivitiesAction {\n  type: typeof INITIALIZE_ACTIVITIES,\n  data: Array<StravaDetailedActivity>\n}\n\nexport type ActivitiesActionTypes = InitializeActivitiesAction","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { reducer as activitiesReducer,\n  initializeActivities as initializeActivitiesReducer } from './activities/activities-reducer'\nimport { reducer as activitiesSummaryReducer } from './activities-summary/activitiesSummaryReducer'\nimport { reducer as userReducer } from './user/user-reducer'\nimport thunk from 'redux-thunk'\n\nconst reducer = combineReducers({\n  activities: activitiesReducer,\n  activitiesSummary: activitiesSummaryReducer,\n  user: userReducer\n})\nconst configureStore = () => {\n  return createStore(\n    reducer,\n    applyMiddleware(thunk)\n  )\n}\nexport default configureStore()\nexport type AppState = ReturnType<typeof reducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(  \n  <Provider store={ store }>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}