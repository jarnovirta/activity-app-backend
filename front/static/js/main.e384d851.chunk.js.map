{"version":3,"sources":["profile_img.jpg","models/strava/strava-activity-type.tsx","components/profile/index.tsx","util/compare-dates.tsx","components/activitiesSummary/activitiesWeekSummary/index.tsx","store/activities-summary/activitiesSummaryReducer.tsx","components/activitiesSummary/activityButtons/index.tsx","store/activities-summary/types.tsx","components/activitiesSummary/index.tsx","components/home/index.tsx","models/strava/strava-detailed-activity-iots.tsx","services/activities/index.tsx","store/activities/activities-reducer.tsx","services/user/index.tsx","services/login/index.tsx","components/navigation/index.tsx","store/user/user-reducer.tsx","store/user/types.tsx","components/login/index.tsx","components/sign-up/index.tsx","App.tsx","store/activities/types.tsx","store/store.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","StravaActivityType","connect","state","user","activitiesCount","activities","activityList","length","latestActivity","sort","a","b","Date","start_date_local","getTime","props","react_default","createElement","className","style","display","justifyContent","alignItems","Image","src","testImg","marginBottom","zIndex","position","maxWidth","maxHeight","roundedCircle","Card","Header","username","ListGroup","variant","Item","type","dist_default","format","compareDates","date1","date2","d1","setHours","d2","days","startDate","now","getChartData","weekActivityData","chartDate","chartData","i","dist","filter","activity","map","distance","reduce","sum","day","getDay","Math","round","setDate","getDate","activityType","activitiesSummary","selectedActivity","es6","width","height","data","margin","top","right","left","bottom","dataKey","fill","TStravaActivityType","t","getTypeObject","initialState","Ride","mapDispatchersToProps","setActivity","dispatch","activityButtonStyle","color","textShadow","handleSetActivityClick","ButtonGroup","Button","onClick","active","lib_default","name","size","Run","Swim","activitiesSummary_activityButtons","activitiesWeekSummary","Home","components_profile","components_activitiesSummary","TStravaDetailedActivity","id","moving_time","elapsed_time","workout_type","average_speed","max_speed","kilojoules","description","calories","getAll","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","stravaAccessToken","params","response","wrap","_context","prev","next","headers","Authorization","concat","axios","get","sent","console","log","decodeActivities","abrupt","stop","_x","apply","this","arguments","forEach","decode","services_activities","initialized","services_user","post","services_login","creds","logout","window","localStorage","removeItem","Navbar","bg","expand","react_router_bootstrap_lib","exact","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","eventKey","NavDropdown","title","href","Divider","login","loginService","setItem","JSON","stringify","withRouter","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","password","setPassword","FormGroup","FormLabel","FormControl","onChange","event","target","value","placeholder","document","getElementById","reset","history","push","addUser","_ref3","_callee3","addedUser","_context3","userService","_x3","firstName","setFirstName","lastName","setLastName","_useState5","_useState6","_useState7","_useState8","getLoggedInUser","loginDataString","getItem","setUser","parse","initializeState","_ref2","_callee2","_context2","initializeActivities","_x2","activityService","useEffect","loggedIn","showWhenLoggedIn","showWhenNotLoggedIn","react_router_dom","components_login","navigation","react_router","path","render","components_home","sign_up","reducer","combineReducers","undefined","action","objectSpread","configureStore","createStore","applyMiddleware","thunk","ReactDOM","es","store","src_App_0"],"mappings":"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","file":"static/js/main.e384d851.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile_img.0cc8b8fb.jpg\";","import * as t from 'io-ts'\n\nexport enum StravaActivityType {\n  AlpineSki = \"AlpineSki\", BackcountrySki = \"BackcountrySki\",\n  Canoeing = \"Canoeing\", Crossfit = \"Crossfit\",\n  EBikeRide = \"EBikeRide\", Elliptical = \"Elliptical\",\n  Golf = \"Golf\", Handcycle = \"Handcycle\", Hike = \"Hike\",\n  IceSkate = \"IceSkate\", InlineSkate = \"InlineSkate\",\n  Kayaking = \"Kayaking\", Kitesurf = \"Kitesurf\",\n  NordicSki = \"NordicSki\", Ride = \"Ride\",\n  RockClimbing = \"RockClimbing\", RollerSki = \"RollerSki\",\n  Rowing = \"Rowing\", Run = \"Run\", Sail = \"Sail\",\n  Skateboard = \"Skateboard\", Snowboard = \"Snowboard\", Snowshoe = \"Snowshoe\",\n  Soccer = \"Soccer\", StairStepper = \"StairStepper\",\n  StandUpPaddling = \"StandUpPaddling\", Surfing = \"Surfing\",\n  Swim = \"Swim\", Velomobile = \"Velomobile\", VirtualRide = \"VirtualRide\",\n  VirtualRun = \"VirtualRun\", Walk = \"Walk\", WeightTraining = \"WeightTraining\",\n  Wheelchair = \"Wheelchair\", Windsurf = \"Windsurf\", Workout = \"Workout\",\n  Yoga = \"Yoga\"\n}\n\n\nconst getTypeObject = () => {\n  const type: any = {}\n  for (let i = 0; i < 37; i++) {\n    type[\"Ride\"] = 14\n  }\n  return type\n}\n// Validator\nconst TStravaActivityType =  t.keyof(getTypeObject())\n\nexport default TStravaActivityType","import './index.css'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Card, ListGroup, Image } from 'react-bootstrap'\nimport Moment from 'react-moment'\nimport { IProps } from './types'\nimport testImg from './../../profile_img.jpg'\nimport { StravaDetailedActivity } from '../../models/strava/strava-detailed-activity-iots'\n\nconst filterLatestActivity = (activities:Array<StravaDetailedActivity>) => {\n  return activities\n    .sort((a, b) => new Date(b.start_date_local).getTime()\n      - new Date(a.start_date_local).getTime())\n    [0]\n}\n\nconst Profile: React.FunctionComponent<IProps> = (props: IProps) => {\n  const LatestActivity = () => {\n    if (!props.latestActivity) return (<div></div>)\n    return (\n      <div>\n        Latest activity:<br />\n        <b>{ props.latestActivity.type }</b>\n        &nbsp;- <Moment format=\"MMM DD, YYYY\">{props.latestActivity.start_date_local}</Moment>\n      </div>\n    )\n  }\n  return (\n    <div className=\"profile\">\n    <div style={{ display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'}}>\n    <Image src={testImg }\n            style={{marginBottom: '-2.5rem', zIndex: 100000, position:'relative', maxWidth:'80px', maxHeight:'80px'}}\n            roundedCircle />\n    </div>\n      <Card>\n        <Card.Header>\n          <div className=\"profileBody text-center\">\n            <h3>{ props.user.username }</h3>\n            <p>Activities - { props.activitiesCount }</p>\n          </div>\n        </Card.Header>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>\n            <LatestActivity />\n          </ListGroup.Item>\n          <ListGroup.Item>\n            Your Training Log\n          </ListGroup.Item>\n        </ListGroup>\n      </Card>\n    </div>\n  )\n}\nconst mapStateToProps = (state: any) => {\n  return {\n    user: state.user,\n    activitiesCount: state.activities.activityList.length,\n    latestActivity: filterLatestActivity(state.activities.activityList)\n  }\n}\nexport default connect(mapStateToProps)(Profile)","const compareDates = (date1:Date, date2:Date):number => {\n  let d1 = new Date(date1)\n  d1.setHours(0, 0, 0, 0)\n  let d2 = new Date(date2)\n  d2.setHours(0, 0, 0, 0)\n  return d1.getTime() - d2.getTime()\n}\nexport default compareDates","import React from 'react'\nimport { connect } from 'react-redux'\nimport { StravaDetailedActivity } from '../../../models/strava/strava-detailed-activity-iots'\nimport {\n  BarChart, Bar, XAxis, YAxis, Tooltip,\n} from 'recharts'\nimport { StravaActivityType }  from '../../../models/strava/strava-activity-type'\nimport compareDates from '../../../util/compare-dates'\nimport { IChartData, IProps } from './types'\n\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\nconst startDate = new Date(Date.now() - 6 * 24 * 60 * 60 * 1000)\n\nconst getChartData = (weekActivityData:Array<StravaDetailedActivity>):Array<IChartData> => {\n    const chartDate:Date = new Date(startDate)\n    let chartData:Array<IChartData> = []\n    for (let i = 0; i < 7; i++) {\n      let dist = weekActivityData\n        .filter(activity => {\n          return compareDates(new Date(activity.start_date_local), chartDate) === 0\n        })\n        .map(activity => activity.distance)\n        .reduce((sum, distance) => sum + distance, 0)\n      chartData[i] = {\n        day: days[chartDate.getDay()],\n        distance: dist = Math.round(10 * dist / 1000) / 10\n      }\n      chartDate.setDate(chartDate.getDate() + 1)\n    }\n    return chartData\n  }\n\nconst filterActivities = (\n  activities:Array<StravaDetailedActivity>,\n  activityType: StravaActivityType): Array<StravaDetailedActivity> => {\n    return activities\n      .filter(activity => {\n        return activity.type === activityType &&\n          compareDates(new Date(activity.start_date_local), startDate) >= 0\n      })\n}\n\nconst ActivitiesWeekSummary: React.FunctionComponent<IProps> = (props: IProps) => {\n  return (\n    <div>\n      <BarChart\n        width={500}\n        height={150}\n        data={ getChartData(props.activities) }\n        margin={{\n          top: 5, right: 30, left: 0, bottom: 5,\n        }}>\n        <XAxis dataKey=\"day\" />\n        <YAxis />\n        <Tooltip />\n        <Bar dataKey=\"distance\" fill=\"#8884d8\" />\n      </BarChart>\n      <p className=\"text-muted\">Strava</p>\n    </div>\n  )\n}\nconst mapStateToProps = (state: any) => {\n  return {\n    activities: filterActivities(\n      state.activities.activityList,\n      state.activitiesSummary.selectedActivity)\n  }\n}\nexport default connect(mapStateToProps)(ActivitiesWeekSummary)","import { Dispatch } from 'redux'\nimport { StravaActivityType } from '../../models/strava/strava-activity-type';\nimport { SET_ACTIVITY, ActivitiesActionTypes, ActivitiesSummaryState } from './types'\n\n\nconst initialState:ActivitiesSummaryState = {\n  selectedActivity: StravaActivityType.Ride\n}\nexport const reducer = (state = initialState, action: ActivitiesActionTypes):ActivitiesSummaryState => {\n  if (action.type === SET_ACTIVITY) {\n    return { ...state, selectedActivity: action.data }\n  }\n  return state\n}\nexport const setActivity = (activity:StravaActivityType) => {\n  return (dispatch: Dispatch) => {\n    dispatch({\n      type: SET_ACTIVITY,\n      data: activity\n    })\n  }\n}","import './index.css'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { ButtonGroup, Button } from 'react-bootstrap'\nimport FontAwesome from 'react-fontawesome'\nimport { StravaActivityType } from '../../../models/strava/strava-activity-type'\nimport { setActivity } from '../../../store/activities-summary/activitiesSummaryReducer'\n\ninterface IProps {\n  setActivity: Function,\n  selectedActivity: StravaActivityType\n}\nconst ActivityButtons: React.FunctionComponent<IProps> = (props: IProps) => {\n  const activityButtonStyle = { color: 'white', textShadow: '0 1px 0 rgba(0, 0, 0, 0.1)' }\n  const handleSetActivityClick = (activity:StravaActivityType) => () => {\n    props.setActivity(activity)\n  }\n  return (\n    <div>\n      <ButtonGroup>\n        <Button\n          variant=\"secondary\"\n          onClick={handleSetActivityClick(StravaActivityType.Ride)}\n          active={props.selectedActivity === StravaActivityType.Ride}>\n          <FontAwesome className=\"activityIcon\"\n            name='bicycle'\n            size='2x'\n            style={activityButtonStyle}\n          />\n        </Button>\n        <Button\n          variant=\"secondary\"\n          onClick={handleSetActivityClick(StravaActivityType.Run)}\n          active={props.selectedActivity === StravaActivityType.Run}>\n          <FontAwesome\n            name='running'\n            size='2x'\n            style={activityButtonStyle}\n          />\n        </Button>\n        <Button variant=\"secondary\"\n          onClick={handleSetActivityClick(StravaActivityType.Swim)}\n          active={props.selectedActivity === StravaActivityType.Swim}>\n          <FontAwesome\n            name='swimmer'\n            size='2x'\n            style={activityButtonStyle}\n          />\n        </Button>\n      </ButtonGroup>\n    </div>\n  )\n}\nconst mapStateToProps = (state: any) => {\n  return {\n    selectedActivity: state.activitiesSummary.selectedActivity\n  }\n}\nconst mapDispatchersToProps = {\n  setActivity\n}\nexport default connect(mapStateToProps, mapDispatchersToProps)(ActivityButtons)","import { StravaActivityType } from \"../../models/strava/strava-activity-type\";\n\nexport const SET_ACTIVITY = 'SET_ACTIVITY'\n\nexport interface ActivitiesSummaryState {\n  selectedActivity: StravaActivityType\n}\ninterface SetActivityAction {\n  type: typeof SET_ACTIVITY,\n  data: StravaActivityType\n}\n\nexport type ActivitiesActionTypes = SetActivityAction","import './index.css'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Card, ListGroup } from 'react-bootstrap'\nimport { StravaDetailedActivity } from '../../models/strava/strava-detailed-activity-iots'\nimport ActivitiesWeekSummary from './activitiesWeekSummary'\nimport ActivityButtons from './activityButtons'\n\ninterface IProps {\n  activities: Array<StravaDetailedActivity>\n}\n\nconst ActivitiesSummary: React.FunctionComponent<IProps> = (props: IProps) => {\n  return (\n    <div>\n      <Card>\n        <Card.Header>\n          Activities Summary\n        </Card.Header>\n        <ListGroup variant=\"flush\">\n          <ListGroup.Item>\n            <ActivityButtons />\n          </ListGroup.Item>\n          <ListGroup.Item><ActivitiesWeekSummary /></ListGroup.Item>\n          <ListGroup.Item>Month summary</ListGroup.Item>\n        </ListGroup>\n      </Card>\n    </div>\n  )\n}\nconst mapStateToProps = (state: any) => {\n  return {\n    activities: state.activities\n  }\n}\n\nexport default connect(mapStateToProps)(ActivitiesSummary)","import './index.css'\nimport React from 'react'\nimport Profile from './../profile'\nimport ActivitiesSummary from '../activitiesSummary'\n\nconst Home = () => {\n  return (\n    <div>\n      <Profile />\n      <ActivitiesSummary />\n    </div>\n  )\n}\n\nexport default Home","import * as t from 'io-ts';\nimport TStravaActivityType from './strava-activity-type'\n\n// Type of StravaDetailedActivity\nexport type StravaDetailedActivity = t.TypeOf<typeof TStravaDetailedActivity>;\n\n// Validator\nconst TStravaDetailedActivity = t.type({\n  id: t.number,             // activitys Strava-id\n  name: t.string,           // activity's name\n  distance: t.number,       // meters\n  moving_time: t.number,    // seconds\n  elapsed_time: t.number,   // seconds\n  type: TStravaActivityType,\n  start_date_local: t.string,  // activity's local start time\n  workout_type: t.number,\n  average_speed: t.number,  // meters per second\n  max_speed: t.number,      // meters per second\n  kilojoules: t.number,      // total work in kJ, only bike rides\n  description: t.string,     // description of the activity\n  calories: t.number        // kilocalories consumed during activity\n\n})\n\nexport default TStravaDetailedActivity","import axios from 'axios'\nimport { StravaDetailedActivity } from \"../../models/strava/strava-detailed-activity-iots\"\nimport TStravaDetailedActivity from \"../../models/strava/strava-detailed-activity-iots\"\n\nconst baseUrl = 'https://www.strava.com/api/v3/athlete/activities'\n\n\n// TODO: add error handling\nconst getAll = async (stravaAccessToken: string):Promise<Array<StravaDetailedActivity>> => {\n  const params = {\n    \"headers\": {\n      \"Authorization\": `Bearer ${stravaAccessToken}`\n    }\n  }\n  const response = await axios.get(baseUrl, params)\n  console.log(\"Activities response\", response.data)\n  const activities: Array<any> = response.data\n  decodeActivities(activities)\n  return activities\n}\n\nconst decodeActivities = (activities:Array<any>) => {\n  activities\n    .forEach(activity => TStravaDetailedActivity.decode(activity))\n}\n\nexport default { getAll }\n","import activityService from '../../services/activities'\nimport { Dispatch } from 'redux'\nimport { IActivitiesState, ActivitiesActionTypes, INITIALIZE_ACTIVITIES } from './types'\nimport { StravaDetailedActivity } from '../../models/strava/strava-detailed-activity-iots'\n\nconst initialState: IActivitiesState = { \n  initialized: false,\n  activityList: []\n}\n\nexport const reducer = (\n  state = initialState,\n  action: ActivitiesActionTypes): IActivitiesState =>\n  {\n    if (action.type === INITIALIZE_ACTIVITIES) {\n      return { ...state, activityList: action.data }\n    }\n    return state\n  }\n\nexport const initializeActivities = (stravaAccessToken: string) => {\n  return async (dispatch: Dispatch) => {\n    const activities: Array<StravaDetailedActivity> = await activityService.getAll(stravaAccessToken)\n    dispatch({\n      type: INITIALIZE_ACTIVITIES,\n      data: activities\n    })\n  }\n}","import IUser from \"../../models/User\"\nimport axios from \"axios\"\nconst baseUrl = \"/api/users\"\n\nconst post = async (user:IUser):Promise<IUser> => {\n  const response = await axios.post<IUser>(baseUrl, user)\n  return response.data\n}\n\nexport default { post }","import IUser from \"../../models/User\"\nimport axios from \"axios\"\nimport { ICredentials } from \"../../models/Credentials\"\n\nconst baseUrl = \"/api/login\"\n\nconst post = async (creds: ICredentials): Promise<IUser> => {\n  const response = await axios.post<IUser>(`${baseUrl}`, creds)\n  return response.data\n}\n\nexport default { post }","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from './../../store/user/user-reducer'\n\ninterface IProps {\n  logout: Function\n}\n\nconst Navigation = (props:IProps) => (\n  <div>\n    <Navbar bg=\"light\" expand=\"lg\">\n      <LinkContainer exact to=\"/\">\n        <Navbar.Brand>Fitness App</Navbar.Brand>\n      </LinkContainer>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <LinkContainer exact to=\"/\">\n            <Nav.Link eventKey=\"/\">Home</Nav.Link>\n          </LinkContainer>\n          <Nav.Link onClick={() => props.logout()}>Logout</Nav.Link>\n          <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </div>\n)\nconst mapDispatchersToProps = {\n  logout\n}\nexport default connect(null, mapDispatchersToProps)(Navigation)","import { Dispatch } from 'redux'\nimport { SET_USER, LOGOUT_USER, UserActionTypes } from './types'\nimport IUser from '../../models/User'\nimport userService from '../../services/user'\nimport loginService from '../../services/login'\nimport { ICredentials } from '../../models/Credentials';\n\nexport const reducer = (state:IUser = {} as IUser,\n  action: UserActionTypes): IUser => {\n  if (action.type === SET_USER) {\n    return action.data\n  }\n  if (action.type === LOGOUT_USER) {\n    return {} as IUser\n  }\n  return state\n}\nexport const login = (creds: ICredentials) => {\n  return async (dispatch: Dispatch) => {\n    const user: IUser = await loginService.post(creds)\n    window.localStorage.setItem('FitnessAppUser', JSON.stringify(user))\n    dispatch({\n      type: SET_USER,\n      data: user\n    })\n  }\n}\nexport const logout = () => {\n  return (dispatch: Dispatch) => {\n    window.localStorage.removeItem('FitnessAppUser')\n    dispatch({\n      type: LOGOUT_USER\n    })\n  }\n}\nexport const setUser = (user: IUser) => {\n  return async (dispatch: Dispatch) => {\n    dispatch({\n      type: SET_USER,\n      data: user\n    })\n  }\n}\n\nexport const addUser = (user: IUser) => {\n  return async (dispatch: Dispatch) => {\n    const addedUser: IUser = await userService.post(user)\n    window.localStorage.setItem('FitnessAppUser', JSON.stringify(addedUser))\n    dispatch({\n      type: SET_USER,\n      data: user\n    })\n  }\n}","import IUser from \"../../models/User\";\n\nexport const SET_USER = 'SET_USER'\nexport const LOGOUT_USER = 'LOGOUT_USER'\n\ninterface SetUserAction {\n  type: typeof SET_USER,\n  data: IUser\n}\ninterface LogoutUserAction {\n  type: typeof LOGOUT_USER  \n}\n\nexport type UserActionTypes = SetUserAction | LogoutUserAction","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { login } from '../../store/user/user-reducer'\nimport { FormGroup, FormControl, FormLabel, Button } from 'react-bootstrap'\nimport { IProps, IInputChangeEvent } from './types'\nimport { ICredentials } from '../../models/Credentials'\nimport { withRouter } from 'react-router'\n\nconst Login: React.SFC<IProps> = (props: IProps) => {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  \n  const handleSubmit = () => {\n    const creds: ICredentials = {\n      username, password\n    };\n    (document.getElementById(\"loginForm\") as HTMLFormElement).reset()\n    props.login(creds)\n    props.history.push(\"/\")\n  }\n  const handleUsernameChange = (event: IInputChangeEvent) => {\n    setUsername((event.target as HTMLInputElement).value)\n  }\n  const handlePasswordChange = (event: IInputChangeEvent) => {\n    setPassword((event.target as HTMLInputElement).value)\n  }\n  return (    \n    <div>\n      <h4>Login</h4>\n      <form id=\"loginForm\">\n        <FormGroup>\n          <FormLabel>Username</FormLabel>\n          <FormControl id=\"username\" onChange={handleUsernameChange} type=\"text\"\n            name=\"username\" placeholder=\"Enter username\" />\n\n          <FormLabel>Password</FormLabel>\n          <FormControl onChange={handlePasswordChange} type=\"password\"\n            id=\"password\" name=\"password\" placeholder=\"Enter password\" />\n          <Button onClick={handleSubmit}>Login</Button>\n        </FormGroup>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchersToProps = {\n  login\n}\n\nexport default withRouter(connect(null, mapDispatchersToProps)(Login))\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addUser } from '../../store/user/user-reducer'\nimport { FormGroup, FormControl, FormLabel,\n  Button } from 'react-bootstrap'\nimport IUser from '../../models/User'\nimport { IProps, IInputChangeEvent } from './types'\nimport { withRouter } from 'react-router'\n\nconst Signup: React.SFC<IProps> = (props: IProps) => {\n  const [firstName, setFirstName] = useState(\"\")\n  const [lastName, setLastName] = useState(\"\")\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const handleSubmit = () => {    \n    const user: IUser = {\n      firstName, lastName, username, password\n    };\n    (document.getElementById(\"addUserForm\") as HTMLFormElement).reset()\n    props.addUser(user)    \n    props.history.push(\"/\")\n  }\n\n  const handleFirstNameChange = (event: IInputChangeEvent) => {\n    setFirstName((event.target as HTMLInputElement).value)\n  }\n  const handleLastNameChange = (event: IInputChangeEvent) => {\n    setLastName((event.target as HTMLInputElement).value)\n  }\n  const handleUsernameChange = (event: IInputChangeEvent) => {\n    setUsername((event.target as HTMLInputElement).value)\n  }\n  const handlePasswordChange = (event: IInputChangeEvent) => {\n    setPassword((event.target as HTMLInputElement).value)\n  }\n  return (\n    <div>\n      <form id=\"addUserForm\">\n      <FormGroup>\n        <FormLabel>First name</FormLabel>\n        <FormControl onChange={handleFirstNameChange} type=\"text\"\n          name=\"firstName\" placeholder=\"Enter first name\" />\n\n        <FormLabel>Last name</FormLabel>\n        <FormControl onChange={handleLastNameChange} type=\"text\"\n          name=\"lastName\" placeholder=\"Enter last name\" />\n\n        <FormLabel>Username</FormLabel>\n        <FormControl onChange={handleUsernameChange} type=\"text\"\n          name=\"username\" placeholder=\"Enter username\" />\n\n        <FormLabel>Password</FormLabel>\n        <FormControl onChange={handlePasswordChange} type=\"password\"\n          name=\"password\" placeholder=\"Enter password\" />\n\n        <Button onClick={handleSubmit}>Submit</Button>\n      </FormGroup>\n      </form>\n    </div>\n  )\n}\n\nconst mapDispatchersToProps = {\n  addUser\n}\nexport default withRouter(connect(null, mapDispatchersToProps)(Signup))\n","import './App.css'\nimport React, { Component, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Home from './components/home'\nimport { initializeActivities } from './store/activities/activities-reducer'\nimport { setUser } from './store/user/user-reducer'\nimport { AppState } from './store/store'\nimport Navigation from './components/navigation'\nimport Login from './components/login'\nimport Signup from './components/sign-up'\nimport IUser from './models/User'\nimport { IActivitiesState } from './store/activities/types';\n\ninterface IProps {\n  setUser: Function,\n  activities: IActivitiesState,\n  initializeActivities: Function,\n  user: IUser\n}\nconst getLoggedInUser = async (props: IProps) => {\n  const loginDataString = window.localStorage.getItem('FitnessAppUser')\n  if (loginDataString) await props.setUser(JSON.parse(loginDataString))  \n}\nconst initializeState = async (props: IProps) => {\n  if (!props.user.username) getLoggedInUser(props)\n  if (!props.activities.initialized && props.user.username) {    \n    props.initializeActivities(props.user.stravaAccessToken)\n  }\n}\nconst App = (props: IProps) => {\n  useEffect(() => {\n    initializeState(props)\n  }, [props])\n\n  // getStravaAuthentication = async (event: any) => {\n  //   event.preventDefault()\n  //   const redirectUrl = `${window.location.href}api/stravaauth/authCode/${this.props.user.id}`\n  //   const stravaAuthUrl = \"http://www.strava.com/oauth/authorize?\"\n  //     + \"client_id=33120&response_type=code&redirect_uri=\"\n  //     + redirectUrl + \"&\"\n  //     + \"approval_prompt=force&scope=profile:write,activity:write,activity:read_all\"\n  //   window.location.href = stravaAuthUrl\n  // }\n  const loggedIn = !props.user ? false : props.user.username ? true : false\n  const showWhenLoggedIn = { display: loggedIn ? '' : 'none' }\n  const showWhenNotLoggedIn = { display: loggedIn ? 'none' : '' }\n\n  return (\n    <div className=\"container\">\n      <Router>\n        <div>\n          <div style={showWhenNotLoggedIn}>\n            <Login />\n          </div>\n          <div style={showWhenLoggedIn}>\n            <Navigation />\n            <Route exact path=\"/\" render={() => <Home />} />\n            <Route path=\"/login\" render={() => <Login />} />\n            <Route path=\"/signup\" render={() => <Signup />} />\n          </div>\n        </div>\n      </Router>\n    </div>\n  )\n}\nconst mapStateToProps = (state: AppState) => ({\n  user: state.user,\n  activities: state.activities\n})\nconst mapDispatchersToProps = {\n  initializeActivities, setUser\n\n}\nexport default connect(mapStateToProps, mapDispatchersToProps)(App)","import { StravaDetailedActivity } from \"../../models/strava/strava-detailed-activity-iots\";\n\n\nexport interface IActivitiesState {\n  initialized: boolean,\n  activityList: Array<StravaDetailedActivity>\n}\n\nexport const INITIALIZE_ACTIVITIES = 'INITIALIZE_ACTIVITIES'\n\ninterface InitializeActivitiesAction {\n  type: typeof INITIALIZE_ACTIVITIES,\n  data: Array<StravaDetailedActivity>\n}\n\nexport type ActivitiesActionTypes = InitializeActivitiesAction","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { reducer as activitiesReducer,\n  initializeActivities as initializeActivitiesReducer } from './activities/activities-reducer'\nimport { reducer as activitiesSummaryReducer } from './activities-summary/activitiesSummaryReducer'\nimport { reducer as userReducer } from './user/user-reducer'\nimport thunk from 'redux-thunk'\n\nconst reducer = combineReducers({\n  activities: activitiesReducer,\n  activitiesSummary: activitiesSummaryReducer,\n  user: userReducer\n})\nconst configureStore = () => {\n  return createStore(\n    reducer,\n    applyMiddleware(thunk)\n  )\n}\nexport default configureStore()\nexport type AppState = ReturnType<typeof reducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n  \n  <Provider store={ store }>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}